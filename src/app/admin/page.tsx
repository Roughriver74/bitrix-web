'use client'

import { useState, useEffect } from 'react'
import { useAuth } from '@/hooks/useAuth'
import { Course } from '@/types'
import Link from 'next/link'

export default function AdminPage() {
	const { user, loading } = useAuth()
	const [courses, setCourses] = useState<Course[]>([])
	const [coursesLoading, setCoursesLoading] = useState(true)
	const [showCourseForm, setShowCourseForm] = useState(false)
	const [editingCourse, setEditingCourse] = useState<Course | null>(null)
	const [migrationStatus, setMigrationStatus] = useState<string>('')
	const [migrationLoading, setMigrationLoading] = useState(false)
	const [dataStatus, setDataStatus] = useState<any>(null)
	const [statusLoading, setStatusLoading] = useState(true)

	useEffect(() => {
		fetchCourses()
		fetchDataStatus()
	}, [])

	const fetchDataStatus = async () => {
		try {
			const response = await fetch('/api/data-status')
			if (response.ok) {
				const data = await response.json()
				setDataStatus(data.status)
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–∞–Ω–Ω—ã—Ö:', error)
		} finally {
			setStatusLoading(false)
		}
	}

	const fetchCourses = async () => {
		try {
			const response = await fetch('/api/courses')
			if (response.ok) {
				const data = await response.json()
				setCourses(data.courses)
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤:', error)
		} finally {
			setCoursesLoading(false)
		}
	}

	const handleDeleteCourse = async (courseId: number) => {
		if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫—É—Ä—Å?')) {
			return
		}

		try {
			const response = await fetch(`/api/courses/${courseId}`, {
				method: 'DELETE',
			})

			if (response.ok) {
				setCourses(courses.filter(course => course.id !== courseId))
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞:', error)
		}
	}

	const handleMigrateData = async (
		target: 'blob' | 'postgres' | 'all' = 'all'
	) => {
		if (
			!confirm(
				`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ ${
					target === 'all' ? '–æ–±–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' : target
				}? –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.`
			)
		) {
			return
		}

		setMigrationLoading(true)
		setMigrationStatus('–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏...')

		try {
			const response = await fetch(`/api/migrate-data?target=${target}`, {
				method: 'POST',
			})

			const data = await response.json()

			if (response.ok && data.success) {
				setMigrationStatus('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
				// –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫—É—Ä—Å—ã –∏ —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
				await fetchCourses()
				await fetchDataStatus()
			} else {
				setMigrationStatus(
					`‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: ${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
				)
				console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', data.details)
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error)
			setMigrationStatus('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º')
		} finally {
			setMigrationLoading(false)
			// –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
			setTimeout(() => setMigrationStatus(''), 5000)
		}
	}

	if (loading || coursesLoading) {
		return (
			<div className='min-h-screen bg-gray-900 flex items-center justify-center'>
				<div className='text-xl text-white'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
			</div>
		)
	}

	if (!user || !user.is_admin) {
		return (
			<div className='min-h-screen bg-gray-900 flex items-center justify-center'>
				<div className='text-xl text-red-400'>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</div>
			</div>
		)
	}

	return (
		<div className='min-h-screen bg-gray-900'>
			<div className='container mx-auto px-4 py-8'>
				<div className='mb-8'>
					<div className='flex justify-between items-center mb-4'>
						<h1 className='text-3xl font-bold text-white'>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</h1>
						<div className='flex space-x-2'>
							<Link
								href='/admin/tests'
								className='bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700'
							>
								–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞–º–∏
							</Link>
							<Link
								href='/'
								className='bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700'
							>
								–ù–∞ –≥–ª–∞–≤–Ω—É—é
							</Link>
						</div>
					</div>
					<p className='text-gray-300'>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ –∏ —É—Ä–æ–∫–∞–º–∏</p>

					{/* –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏ */}
					{migrationStatus && (
						<div
							className={`mt-4 p-3 rounded-lg ${
								migrationStatus.includes('‚úÖ')
									? 'bg-green-900 text-green-200'
									: migrationStatus.includes('‚ùå')
									? 'bg-red-900 text-red-200'
									: 'bg-blue-900 text-blue-200'
							}`}
						>
							{migrationStatus}
						</div>
					)}
				</div>

				{/* –°—Ç–∞—Ç—É—Å –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö */}
				<div className='bg-gray-800 rounded-lg shadow-md p-6 mb-8'>
					<h2 className='text-2xl font-semibold text-white mb-4'>
						–°—Ç–∞—Ç—É—Å –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
					</h2>
					{statusLoading ? (
						<div className='text-gray-400'>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...</div>
					) : dataStatus ? (
						<div className='space-y-4'>
							<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
								<div
									className={`p-4 rounded-lg ${
										dataStatus.blob.available ? 'bg-blue-900' : 'bg-red-900'
									}`}
								>
									<h3 className='text-lg font-medium text-white mb-2'>
										üîµ Vercel Blob Storage
									</h3>
									<p
										className={`text-sm ${
											dataStatus.blob.available
												? 'text-blue-200'
												: 'text-red-200'
										}`}
									>
										{dataStatus.blob.available
											? `‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω ‚Ä¢ ${dataStatus.blob.courses} –∫—É—Ä—Å–æ–≤`
											: `‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Ä¢ ${dataStatus.blob.error}`}
									</p>
								</div>

								<div
									className={`p-4 rounded-lg ${
										dataStatus.postgres.available
											? 'bg-green-900'
											: 'bg-red-900'
									}`}
								>
									<h3 className='text-lg font-medium text-white mb-2'>
										üü¢ PostgreSQL
									</h3>
									<p
										className={`text-sm ${
											dataStatus.postgres.available
												? 'text-green-200'
												: 'text-red-200'
										}`}
									>
										{dataStatus.postgres.available
											? `‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω ‚Ä¢ ${dataStatus.postgres.courses} –∫—É—Ä—Å–æ–≤`
											: `‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Ä¢ ${dataStatus.postgres.error}`}
									</p>
								</div>
							</div>

							{dataStatus.recommendations.length > 0 && (
								<div className='bg-gray-700 p-4 rounded-lg'>
									<h4 className='text-white font-medium mb-2'>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
									<ul className='space-y-1'>
										{dataStatus.recommendations.map(
											(rec: string, index: number) => (
												<li key={index} className='text-gray-300 text-sm'>
													{rec}
												</li>
											)
										)}
									</ul>
								</div>
							)}
						</div>
					) : (
						<div className='text-red-400'>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞</div>
					)}
				</div>

				{/* –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö */}
				<div className='bg-gray-800 rounded-lg shadow-md p-6 mb-8'>
					<h2 className='text-2xl font-semibold text-white mb-4'>
						–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
					</h2>
					<div className='grid grid-cols-1 md:grid-cols-3 gap-4'>
						<button
							onClick={() => handleMigrateData('blob')}
							disabled={migrationLoading}
							className='bg-blue-600 text-white px-4 py-3 rounded hover:bg-blue-700 disabled:bg-blue-300 disabled:cursor-not-allowed'
						>
							{migrationLoading ? '–ú–∏–≥—Ä–∞—Ü–∏—è...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ Blob Storage'}
						</button>
						<button
							onClick={() => handleMigrateData('postgres')}
							disabled={migrationLoading}
							className='bg-green-600 text-white px-4 py-3 rounded hover:bg-green-700 disabled:bg-green-300 disabled:cursor-not-allowed'
						>
							{migrationLoading ? '–ú–∏–≥—Ä–∞—Ü–∏—è...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ PostgreSQL'}
						</button>
						<button
							onClick={() => handleMigrateData('all')}
							disabled={migrationLoading}
							className='bg-purple-600 text-white px-4 py-3 rounded hover:bg-purple-700 disabled:bg-purple-300 disabled:cursor-not-allowed'
						>
							{migrationLoading ? '–ú–∏–≥—Ä–∞—Ü–∏—è...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ –≤—Å—ë'}
						</button>
					</div>
					<p className='text-gray-400 text-sm mt-3'>
						–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫—É—Ä—Å—ã, —É—Ä–æ–∫–∏ –∏ —Ç–µ—Å—Ç—ã –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ
						–ø—Ä–∏ –ø—É—Å—Ç–æ–π –±–∞–∑–µ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –¥–∞–Ω–Ω—ã–º–∏.
					</p>
				</div>

				{/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ */}
				<div className='bg-gray-800 rounded-lg shadow-md p-6 mb-8'>
					<div className='flex justify-between items-center mb-6'>
						<h2 className='text-2xl font-semibold text-white'>–ö—É—Ä—Å—ã</h2>
						<button
							onClick={() => setShowCourseForm(true)}
							className='bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700'
						>
							–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å
						</button>
					</div>

					{courses.length === 0 ? (
						<p className='text-gray-400'>–ù–µ—Ç –∫—É—Ä—Å–æ–≤</p>
					) : (
						<div className='space-y-4'>
							{courses.map(course => (
								<div
									key={course.id}
									className='border border-gray-600 rounded-lg p-4 hover:bg-gray-700'
								>
									<div className='flex justify-between items-start'>
										<div className='flex-1'>
											<h3 className='text-lg font-semibold text-white mb-2'>
												{course.title}
											</h3>
											<p className='text-gray-300 mb-2'>{course.description}</p>
											<div className='text-sm text-gray-400'>
												ID: {course.id} | –°–æ–∑–¥–∞–Ω:{' '}
												{new Date(course.created_at).toLocaleDateString()}
											</div>
										</div>
										<div className='flex space-x-2 ml-4'>
											<button
												onClick={() => setEditingCourse(course)}
												className='bg-yellow-500 text-white px-3 py-1 rounded text-sm hover:bg-yellow-600'
											>
												–ò–∑–º–µ–Ω–∏—Ç—å
											</button>
											<Link
												href={`/admin/courses/${course.id}/lessons`}
												className='bg-green-500 text-white px-3 py-1 rounded text-sm hover:bg-green-600'
											>
												–£—Ä–æ–∫–∏
											</Link>
											<button
												onClick={() => handleDeleteCourse(course.id)}
												className='bg-red-500 text-white px-3 py-1 rounded text-sm hover:bg-red-600'
											>
												–£–¥–∞–ª–∏—Ç—å
											</button>
										</div>
									</div>
								</div>
							))}
						</div>
					)}
				</div>

				{/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
				<div className='bg-gray-800 rounded-lg shadow-md p-6'>
					<h2 className='text-2xl font-semibold text-white mb-4'>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
					<div className='grid grid-cols-1 md:grid-cols-3 gap-4'>
						<div className='bg-blue-900 p-4 rounded-lg'>
							<h3 className='text-lg font-medium text-blue-200'>
								–í—Å–µ–≥–æ –∫—É—Ä—Å–æ–≤
							</h3>
							<p className='text-2xl font-bold text-blue-400'>
								{courses.length}
							</p>
						</div>
						<div className='bg-green-900 p-4 rounded-lg'>
							<h3 className='text-lg font-medium text-green-200'>
								–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
							</h3>
							<p className='text-2xl font-bold text-green-400'>-</p>
						</div>
						<div className='bg-purple-900 p-4 rounded-lg'>
							<h3 className='text-lg font-medium text-purple-200'>
								–ü—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
							</h3>
							<p className='text-2xl font-bold text-purple-400'>-</p>
						</div>
					</div>
				</div>
			</div>

			{/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—É—Ä—Å–∞ */}
			{(showCourseForm || editingCourse) && (
				<CourseFormModal
					course={editingCourse}
					onClose={() => {
						setShowCourseForm(false)
						setEditingCourse(null)
					}}
					onSave={() => {
						setShowCourseForm(false)
						setEditingCourse(null)
						fetchCourses()
					}}
				/>
			)}
		</div>
	)
}

interface CourseFormModalProps {
	course?: Course | null
	onClose: () => void
	onSave: () => void
}

function CourseFormModal({ course, onClose, onSave }: CourseFormModalProps) {
	const [title, setTitle] = useState(course?.title || '')
	const [description, setDescription] = useState(course?.description || '')
	const [orderIndex, setOrderIndex] = useState(course?.order_index || 0)
	const [loading, setLoading] = useState(false)

	const handleSubmit = async (e: React.FormEvent) => {
		e.preventDefault()
		setLoading(true)

		try {
			const url = course ? `/api/courses/${course.id}` : '/api/courses'
			const method = course ? 'PUT' : 'POST'

			const response = await fetch(url, {
				method,
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					title,
					description,
					order_index: orderIndex,
				}),
			})

			if (response.ok) {
				onSave()
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞:', error)
		} finally {
			setLoading(false)
		}
	}

	return (
		<div className='fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50'>
			<div className='bg-gray-800 rounded-lg max-w-md w-full p-6'>
				<h3 className='text-lg font-semibold text-white mb-4'>
					{course ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—Å' : '–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å'}
				</h3>

				<form onSubmit={handleSubmit} className='space-y-4'>
					<div>
						<label className='block text-sm font-medium text-gray-300 mb-1'>
							–ù–∞–∑–≤–∞–Ω–∏–µ
						</label>
						<input
							type='text'
							value={title}
							onChange={e => setTitle(e.target.value)}
							required
							className='w-full px-3 py-2 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-700 text-white'
						/>
					</div>

					<div>
						<label className='block text-sm font-medium text-gray-300 mb-1'>
							–û–ø–∏—Å–∞–Ω–∏–µ
						</label>
						<textarea
							value={description}
							onChange={e => setDescription(e.target.value)}
							rows={3}
							className='w-full px-3 py-2 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-700 text-white'
						/>
					</div>

					<div>
						<label className='block text-sm font-medium text-gray-300 mb-1'>
							–ü–æ—Ä—è–¥–æ–∫
						</label>
						<input
							type='number'
							value={orderIndex}
							onChange={e => setOrderIndex(parseInt(e.target.value) || 0)}
							className='w-full px-3 py-2 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-700 text-white'
						/>
					</div>

					<div className='flex space-x-3'>
						<button
							type='submit'
							disabled={loading}
							className='flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-blue-300'
						>
							{loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
						</button>
						<button
							type='button'
							onClick={onClose}
							className='flex-1 bg-gray-600 text-gray-200 py-2 px-4 rounded-md hover:bg-gray-700'
						>
							–û—Ç–º–µ–Ω–∞
						</button>
					</div>
				</form>
			</div>
		</div>
	)
}
