import { NextRequest, NextResponse } from 'next/server'
import { getAllCourses as getBlobCourses } from '@/lib/blob-storage'
import { getAllCourses as getLocalCourses } from '@/lib/local-storage'

export async function GET(request: NextRequest) {
	try {
		const status = {
			blob: { available: false, courses: 0, error: null as any },
			local: { available: false, courses: 0, error: null as any },
			recommendations: [] as string[],
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º Blob storage
		try {
			if (process.env.BLOB_READ_WRITE_TOKEN && process.env.BLOB_READ_WRITE_TOKEN !== 'blob_fake_token_for_development') {
				const blobCourses = await getBlobCourses()
				status.blob.available = true
				status.blob.courses = blobCourses.length
			} else {
				status.blob.error = 'BLOB_READ_WRITE_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ —è–≤–ª—è–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–æ–π'
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Blob storage:', error)
			status.blob.error = error
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
		try {
			const localCourses = await getLocalCourses()
			status.local.available = true
			status.local.courses = localCourses.length
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
			status.local.error = error
		}

		// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
		if (!status.blob.available && !status.local.available) {
			status.recommendations.push(
				'‚ùå –í—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.'
			)
		} else if (!status.blob.available && status.local.available) {
			status.recommendations.push(
				'‚ö†Ô∏è Blob storage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.'
			)
		} else if (status.blob.available && status.blob.courses === 0) {
			status.recommendations.push(
				'üîÑ Blob storage –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –ø—É—Å—Ç. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö.'
			)
		} else if (status.blob.available && status.blob.courses > 0) {
			status.recommendations.push(
				'‚úÖ Blob storage –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ.'
			)
		}

		if (status.local.available && status.local.courses > 0) {
			status.recommendations.push(
				'üì¶ –õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.'
			)
		}

		const hasData = (status.blob.available && status.blob.courses > 0) || 
		                (status.local.available && status.local.courses > 0)
		const isHealthy = status.blob.available || status.local.available

		return NextResponse.json({
			...status,
			overall: {
				healthy: isHealthy,
				hasData,
				message: hasData 
					? '–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ' 
					: '–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö'
			}
		})
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error)
		return NextResponse.json(
			{ 
				error: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö',
				details: error instanceof Error ? error.message : 'Unknown error'
			},
			{ status: 500 }
		)
	}
}
